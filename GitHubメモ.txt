各コマンドについての説明

・git clone...
　　ネットに上がっている、他人のリポジトリ―のコピーを自分のPCに引っ張ってくる。
　　CUIでやる方が色々と便利だが、落とすだけならサイトの[Download ZIP]で事足りる。
　　Gitちゃんを使ってあげたい人は基本的には最初に使うコマンド。
　　Gitちゃんと初の共同作業(?)

・git pull...
　　最新版をネットから引っ張ってくる。
　　作業を行う前にこれを行っておくと後々楽になる。
　　C言語で言うところの『#include stdio』と同じで、おまじないの様なものだと思っておくと楽。
　　Gitちゃんを口説く際には必須のテクニック。

・git status...
　　操作しているリポジトリ(フォルダ)内に適用されていないデータの変更等が無いかの確認を行う。
　　適用されていない変更がある場合は、基本的に赤文字で指摘される。
　　その際に出てくる英文は、「この様な処理をするといいかもよ？」とGitちゃんが教えてくれているので、頑張って解読しよう。

・git add [追加したい変更部分]...
　　変更点をgitに認識させるコマンド、上記のコマンドで赤色が出た場合は大体これをやればおｋ。
　　HDD上での変更点の保存は、Git上での変更点の確定とは意味が違うという事に注意。
　　このコマンドは、「変更点の保存」というよりは、「ここを変更したから変更点を教えるね」とGitに教えている感じ。
　　指定は「ファイル」,「ディレクトリ」等様々な方法がある。
　　以下に私が覚えたコマンドの説明を書く。

　　『.(ドット)』...ディレクトを指す、フォルダー内の変更点を一括で認識させる。基本的にはこれをやっておけば問題はない。
　　　　※書き方... git add .

    『-a』       ...削除したファイルがある場合、『.』だとエラーを返される場合が多い、その場合はこのコマンドを使う。
		　「削除したファイルがるみたいだけど大丈夫？」と聞いてくるGitに「黙って認識しとけ！」と命令するコマンド。
	　　	　　Gitちゃんマジ天使。エンジニアマジ悪魔
　　　　※書き方... git add -a


　　『ファイル名』...ファイルを一つ指定し、その変更点を認識させる。
		　　 「.」に比べ、手間がかかるだけの様に感じるが、一つ一つにコメントを付けたい場合などに便利(なんだと思う。)
		　　 コメントについては次の「git commit」で説明。
　　　　※書き方... git add ファイル名

・git commit...
　　addで認識させた変更点を確定させるコマンド、この時基本的にコメントを記述する(コメントを書かないとGitちゃんに怒られちゃうゾ)。
　　コメントを記述する方法は、『※書き方』で記載。警告されるが日本語も使用可能だったりする。
　　ここで失敗する(赤い文字が出る)場合は最新版じゃないと警告されている場合が多い。
　　最新版ではない場合は、上記『git pull』を行う事。
　　
　　　　※書き方... git commit -m "ここにコメントを書く"